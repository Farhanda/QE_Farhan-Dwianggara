{
	"info": {
		"_postman_id": "25a029c1-2df9-4e04-9143-e31d333b5324",
		"name": "Latihan",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12587876"
	},
	"item": [
		{
			"name": "Get All Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Positif Test Case\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Negatif Test Case\r",
							"pm.test(\"Response should not be empty\", function () {\r",
							"    pm.response.to.not.be.empty;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/posts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Positif Test Case\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// Negatif Test Case\r",
							"pm.test(\"Response should not have errors\", function () {\r",
							"    pm.expect(pm.response.json()).to.not.have.property(\"error\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Data By id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Positif Test Case\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Negatif Test Case\r",
							"pm.test(\"Response should not be empty\", function () {\r",
							"    pm.response.to.not.be.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data By id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Positif Test Case\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Negatif Test Case\r",
							"pm.test(\"Response should not have errors\", function () {\r",
							"    pm.expect(pm.response.json()).to.not.have.property(\"error\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\": 1,\r\n\"title\": \"test\",\r\n\"body\": \"test\",\r\n\"userId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Data By id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Positif Test Case\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Negatif Test Case\r",
							"pm.test(\"Response should not have errors\", function () {\r",
							"    pm.expect(pm.response.json()).to.not.have.property(\"error\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}